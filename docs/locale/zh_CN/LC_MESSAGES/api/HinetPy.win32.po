# SOME DESCRIPTIVE TITLE.
# Copyright (C) Copyright 2014-2017 Dongdong Tian
# This file is distributed under the same license as the HinetPy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: HinetPy 0.5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-21 16:01-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../api/HinetPy.win32.rst:2
msgid "HinetPy.win32 module"
msgstr "HinetPy.win32 模块"

#: HinetPy.win32.Channel:1 of
msgid "Class for channel."
msgstr "通道类。"

#: HinetPy.win32.Channel HinetPy.win32.extract_pz HinetPy.win32.extract_sac
#: HinetPy.win32.merge of
msgid "Parameters"
msgstr "参数"

#: HinetPy.win32.Channel:3 of
msgid "Channel ID."
msgstr "通道ID。"

#: HinetPy.win32.Channel:5 of
msgid "Station Name."
msgstr "台站名。"

#: HinetPy.win32.Channel:7 of
msgid "Channel component name (``U|N|E``)."
msgstr "通道分量（ ``U|N|E`` ）。"

#: HinetPy.win32.Channel:9 of
msgid "Station latitude."
msgstr "台站纬度。"

#: HinetPy.win32.Channel:11 of
msgid "Station longitude."
msgstr "台站经度。"

#: HinetPy.win32.Channel:13 of
msgid "Unit of data (``m``, ``m/s``, ``m/s/s``, ``rad``)."
msgstr "数据的单位（ ``m`` 、 ``m/s`` 、 ``m/s/s`` 、 ``rad`` ）。"

#: HinetPy.win32.Channel:15 of
msgid "Sensor sensitivity."
msgstr "传感器敏感度。"

#: HinetPy.win32.Channel:17 of
msgid "Damping constant of the sensor."
msgstr "传感器阻尼常数。"

#: HinetPy.win32.Channel:19 of
msgid "Natural period of the seismometer."
msgstr "地震仪的自然周期。"

#: HinetPy.win32.Channel:21 of
msgid "Preamplification."
msgstr "预放大因子。"

#: HinetPy.win32.Channel:22 of
msgid "LSB value."
msgstr "LSB值。"

#: HinetPy.win32.extract_sac:1 of
msgid "Extract data as SAC format files."
msgstr "提取数据并以SAC格式保存。"

#: HinetPy.win32.extract_sac:3 of
msgid "win32 file to be processed."
msgstr "要处理的win32文件。"

#: HinetPy.win32.extract_pz:10 HinetPy.win32.extract_sac:5 of
msgid "Channel table file."
msgstr "通道表文件。"

#: HinetPy.win32.extract_sac:7 of
msgid "Suffix of output SAC files. Defaults to ``SAC``."
msgstr "输出SAC文件的后缀。默认值为 ``SAC`` 。"

#: HinetPy.win32.extract_pz:14 HinetPy.win32.extract_sac:9 of
msgid "Output directory. Defaults to current directory."
msgstr "输出目录。默认输出到当前目录。"

#: HinetPy.win32.extract_sac:11 of
msgid ""
"Maximum number of data points. Defaults to 8640000. If the input data is "
"longer than one day, you have to to increase ``pmax``."
msgstr "允许的最大数据点数。默认值为 8640000。若输出数据长度超过一天，你可以自行增加 ``pmax`` 的值。"

#: HinetPy.win32.extract_pz:20 HinetPy.win32.extract_sac:14 of
msgid "Filter channels by ID."
msgstr "按ID筛选通道。"

#: HinetPy.win32.extract_pz:22 HinetPy.win32.extract_sac:16 of
msgid "Filter channels by name."
msgstr "按照台站名筛选通道。"

#: HinetPy.win32.extract_pz:24 HinetPy.win32.extract_sac:18 of
msgid "Filter channels by component."
msgstr "按照分量筛选通道。"

#: HinetPy.win32.extract_sac:20 of
msgid "Extract PZ files at the same time. PZ file has default suffix ``.SAC_PZ``."
msgstr "同时提取SAC零极点文件。默认后缀为 ``.SAC_PZ`` 。"

#: HinetPy.win32.extract_sac:23 of
msgid ""
"Number of parallel processes to speed up data extraction. Use all "
"processes by default."
msgstr "数据提取过程中所使用的并行进程数目。默认使用所有进程。"

#: HinetPy.win32.extract_sac:29 of
msgid ""
"``win2sac`` removes sensitivity from waveform, then multiply by 1.0e9. "
"Thus the extracted SAC files are velocity in nm/s, or acceleration in "
"nm/s/s."
msgstr ""
"``win2sac`` 从波形中去除了灵敏度，并将数据乘以1.0e9。"
"因而提取出的SAC文件的以 nm/s 为单位的速度或以 nm/s/s 为单位的加速度。"

#: HinetPy.win32.extract_pz:27 HinetPy.win32.extract_sac:32
#: HinetPy.win32.merge:10 of
msgid "Examples"
msgstr "示例"

#: HinetPy.win32.extract_sac:36 of
msgid "Extract all channel with specified SAC suffix and output directory:"
msgstr "提取所有通道的数据，并指定SAC文件后缀和输出目录："

#: HinetPy.win32.extract_pz:35 HinetPy.win32.extract_sac:41 of
msgid "Extract only specified channels:"
msgstr "只提取指定通道："

#: HinetPy.win32.extract_pz:1 of
msgid "Extract instrumental response in SAC PZ format from channel table."
msgstr "从通道表中提取仪器响应信息并保存为SAC零极点文件。"

#: HinetPy.win32.extract_pz:5 of
msgid "Only works for instrumental responses of Hi-net network."
msgstr "仅对Hi-net台网的仪器响应有效。"

#: HinetPy.win32.extract_pz:7 of
msgid ""
"RESP files of F-net network can be downloaded from `F-net website "
"<http://www.fnet.bosai.go.jp/st_info/response.php?LANG=en>`_."
msgstr ""
"F-net的RESP仪器响应文件可以从 `F-net网站 "
"<http://www.fnet.bosai.go.jp/st_info/response.php?LANG=en>`_ 下载。"

#: HinetPy.win32.extract_pz:12 of
msgid "Suffix of SAC PZ files. Defaults to ``SAC_PZ``."
msgstr "SAC零极点文件后缀，默认为 ``SAC_PZ`` 。"

#: HinetPy.win32.extract_pz:16 of
msgid ""
"win2sac automatically removes sensivity from waveform data during win32 "
"format to SAC format conversion. So the generated polezero file should "
"omit the sensitivity."
msgstr ""
"win2sac在将win32格式转换为SAC格式时，自动从波形数据中去除了灵敏度。"
"因而生成的零极点文件中省去了灵敏度。"

#: HinetPy.win32.extract_pz:31 of
msgid "Extract all channel with specified suffix and output directory:"
msgstr "提取所有通道并指定SAC零极点文件后缀和输出目录："

#: HinetPy.win32.merge:1 of
msgid "Merge several win32 files to one win32 file."
msgstr "将多个win32文件合并为一个win32文件。"

#: HinetPy.win32.merge:3 of
msgid "Win32 files to be merged."
msgstr "要合并的win32文件。"

#: HinetPy.win32.merge:5 of
msgid "Filename of ouput win32 file."
msgstr "输出的win32文件的文件名。"

#: HinetPy.win32.merge:7 of
msgid "Sort all win32 files by date."
msgstr "强制将所有win32文件按照日期排序。"

#: HinetPy.win32.merge:12 of
msgid ""
"If win32 files are named by starttime (e.g. ``201304040203.cnt``), "
"sorting win32 files in list by name/time is prefered:"
msgstr "若win32数据文件是按照数据开始时间命名的（如 ``201304040203.cnt`` ），则建议将win32文件按照文件名排序："

#: HinetPy.win32.merge:18 of
msgid ""
"If win32 files are named randomly, you should set ``force_sort`` to "
"``True`` to force ``catwin32`` to sort all data by time. However, it's "
"time consuming. Do NOT use it unless necessary:"
msgstr ""
"若win32文件随机命名，你需要设置 ``force_sort=True`` 以强制 ``catwin32`` "
"将所有输入数据按照日期排序。然而，这一过程很耗时。除非必要，请勿使用这一选项："

#: HinetPy.win32.merge:25 of
msgid "You can also use wildcard to specify the win32 files to be merged."
msgstr "你可以使用通配符指定要合并的win32文件。"

